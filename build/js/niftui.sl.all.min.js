const NIFT_UI_SUPPORT_VERSION="ZERO_ONE",NIFT_UI_VERSION="0.1",NIFT_CANVAS_ID="niftCanvas"+NIFT_UI_SUPPORT_VERSION,NIFT_NAME="NiftUI",NiftAsModule={Name:NIFT_NAME,Version:NIFT_UI_VERSION,SupportVersion:NIFT_UI_SUPPORT_VERSION},getCurrentRoute=(Object.defineProperty(String.prototype,"capitalize",{value:function(){return this.charAt(0).toUpperCase()+this.slice(1)},enumerable:!1}),()=>window.location.pathname),Component={NIFTBLOCK:"NiftBlock"};function GetDictionaryName(t){return Component[t]}const DOMEngine=new DOMParser,GetDOMObjectFromString=t=>DOMEngine.parseFromString(t,"text/html").all[3];function NiftErrorHandler(t){let e=document.createElement("div"),r=(e.setAttribute("id","niftErrorBody"),document.createElement("img")),s=(r.setAttribute("id","niftErrorLogo"),r.setAttribute("src","https://niftproj.github.io/NiftUI/docs/assets/brand.svg"),document.createElement("p"));return s.setAttribute("id","niftErrorText"),s.innerHTML=t,e.appendChild(r),e.appendChild(s),document.body.appendChild(e),console.error(t),!1}class NiftInstance{constructor(t="default"){"default"==t&&(t=document.getElementById("niftBody")),this.parent=t,this.routes=!1,this.niftarea=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.niftarea.setAttribute("data-niftver",NIFT_UI_VERSION),this.niftarea.setAttribute("data-niftsupport",NIFT_UI_SUPPORT_VERSION),this.niftarea.setAttribute("id",NIFT_CANVAS_ID),this.niftarea.setAttribute("x",0),this.niftarea.setAttribute("y",0),this.parent.appendChild(this.niftarea),this.updateOn="mousevent"}initialize=t=>{this.routes=t};renderElement=(t=new NiftComponent)=>{t.BeforRendering();let e=t.innerRender();!1!==e.selfOutChilds&&e.selfOutChilds.map(t=>{this.niftarea.appendChild(t.selfOut),this.niftarea.appendChild(t.selfOutBackdrop)}),!1!==e.selfOut&&this.niftarea.appendChild(e.selfOut),!1!==e.selfOutBackdrop&&this.niftarea.appendChild(e.selfOutBackdrop),t.AfterRendering()}}class NiftRoute{constructor(t,e){this.path=t,this.component=e}getPath=()=>this.path;setupAndRender=()=>this.component}class NiftProperty{constructor(t,e,r=!1){this.name=t,this.value=e,this.toRemove=r}}class NiftNode{constructor(){this.parent="default",this.self=!1,this.selfDOM=!1,this.selfOut=!1,this.selfOutBackdrop=!1,this.selfOutChilds=!1}}class NiftComponent extends NiftNode{constructor(t=[],e="default"){super(),"default"==e&&(e=document.getElementById("niftBody")),this.parent=e,this.selfBackdrop=document.createElementNS("http://www.w3.org/2000/svg","polygon"),this.backdropProps=[],this.selfBackdrop.setAttribute("niftType","backfall"),this.self=!1,this.selfOutput=!1,this.selfDOM=!1,this.props=t,this.renderedProps=[],this.childs=[],this.ready=!1,this.error=!1}BeforRendering=()=>{};AfterRendering=()=>{};stylizeBackdrop=()=>{this.selfBackdrop.setAttribute("fill","transparent")};getChilds=domChilderns=>{for(const key in domChilderns)if(Object.hasOwnProperty.call(domChilderns,key)){const child=domChilderns[key];let childComponentName=GetDictionaryName(child.tagName);if(null==childComponentName)return NiftErrorHandler(`Undefined tag ${child.tagName} called.`);let childProps=[];for(const key in child.attributes)if(Object.hasOwnProperty.call(child.attributes,key)){const element=child.attributes[key];childProps.push(new NiftProperty(element.nodeName,element.nodeValue))}this.childs.push(new(eval(childComponentName))(childProps)),this.childs[this.childs.length-1].ready=!0}};setProperty=(t,e)=>{this.props.push(new NiftProperty(t,e)),this.updateInners()};getProperty=e=>{let r=void 0;return this.self.renderedProps.map(t=>{t.name==e&&0==t.toRemove&&(r=t.value)}),r};removeProperty=e=>{let r=-1;this.props.map(t=>{t.name==e&&-1==r&&(t.toRemove=!0,r=0)}),this.updateInners()};mapDOMAttributesToNiftProps=t=>{let e=[];for(const s in t){var r;Object.hasOwnProperty.call(t,s)&&(r=t.attributes[s],e.push(new NiftProperty(r.nodeName,r.nodeValue)))}return e};updateBackdropAreaCapture=t=>{this.selfBackdrop.setAttribute("points",t)};innerRender=()=>{if(!this.ready){this.selfDOM=GetDOMObjectFromString(this.render());let componentName=GetDictionaryName(this.selfDOM.tagName);if(null==componentName)return NiftErrorHandler(`Undefined tag ${this.selfDOM.tagName} called.`);for(const key in this.selfDOM.attributes)if(Object.hasOwnProperty.call(this.selfDOM.attributes,key)){const element=this.selfDOM.attributes[key];this.props.push(new NiftProperty(element.nodeName,element.nodeValue))}this.self=new(eval(componentName))(this.props),this.self.render(),this.getChilds(this.selfDOM.children)}let renderedChilds=this.childs.map(t=>(t.render(),console.log(t),t.innerRender())),returnable=(console.log(renderedChilds),this.stylizeBackdrop(),new NiftNode);return this.ready?returnable.selfOut=this.selfOutput:returnable.selfOut=this.self.selfOutput,returnable.selfOutBackdrop=this.selfBackdrop,returnable.selfOutChilds=renderedChilds,returnable};updateInners=()=>{this.ready?(this.render(),this.updateBackdropAreaCapture(this.rectArea.pointsString)):(this.self.render(),this.updateBackdropAreaCapture(this.self.rectArea.pointsString))}}class NiftRect{constructor(t=0,e=0,r=0,s=0){this.x=t,this.y=e,this.w=r,this.h=s,this.pointsString="",this.points=[{x:t,y:e},{x:r,y:e},{x:r,y:s},{x:t,y:s}]}buildPolygonPoints=()=>(this.points=[{x:this.x,y:this.y},{x:this.w,y:this.y},{x:this.w,y:this.h},{x:this.x,y:this.h}],this.points);getPointsString=()=>(this.pointsString=this.points.reduce((t,e)=>t+parseInt(e.x)+","+parseInt(e.y)+" ",""),this.pointsString)}class NiftBlock extends NiftComponent{constructor(t=[]){super(t),this.yet=!1,this.rectArea=new NiftRect,this.create()}propertyWorker=(e=new NiftProperty)=>{let r=e.name,s=e.value;switch(e.name){case"x":this.rectArea.x=parseInt(e.value),r="points";break;case"y":this.rectArea.y=parseInt(e.value),r="points";break;case"width":this.rectArea.w=parseInt(e.value),r="points";break;case"height":this.rectArea.h=parseInt(e.value),r="points"}"points"==r&&(this.rectArea.buildPolygonPoints(),s=this.rectArea.getPointsString());let i=-1,n=0;return this.renderedProps.map(t=>{t.name==r&&(t.value=s,t.toRemove=e.toRemove,i=n),n++}),-1==i?(this.renderedProps.push(new NiftProperty(r,s,e.toRemove)),this.renderedProps[this.renderedProps.length-1]):this.renderedProps[i]};update=()=>{let e=0;this.props.map(t=>{t=this.propertyWorker(t);t.toRemove?(this.selfOutput.removeAttribute(t.name),this.props.splice(e,1)):this.selfOutput.setAttribute(t.name,t.value),e++})};create=()=>{this.selfOutput=document.createElementNS("http://www.w3.org/2000/svg","polygon")};render=()=>{this.yet?this.update():(this.create(),this.update(),this.yet=!0)}}