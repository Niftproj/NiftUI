const NIFT_UI_SUPPORT_VERSION="ZERO_ONE",NIFT_UI_VERSION="0.1",NIFT_CANVAS_ID="niftCanvas"+NIFT_UI_SUPPORT_VERSION,NIFT_NAME="NiftUI",NiftAsModule={Name:NIFT_NAME,Version:NIFT_UI_VERSION,SupportVersion:NIFT_UI_SUPPORT_VERSION},getCurrentRoute=()=>window.location.pathname,Component={NIFTBLOCK:"NiftBlock",NIFTTEXT:"NiftText",NIFTIMAGE:"NiftImage",CUSTOMCOMPONENT:"CustomComponent"};function GetDictionaryName(e){return Component[e]}const DOMEngine=new DOMParser,GetDOMObjectFromString=e=>DOMEngine.parseFromString(e,"text/html").all[3];function NiftErrorHandler(e){let t=document.createElement("div"),r=(t.setAttribute("id","niftErrorBody"),document.createElement("img")),s=(r.setAttribute("id","niftErrorLogo"),r.setAttribute("src","https://niftproj.github.io/NiftUI/docs/assets/brand.svg"),document.createElement("p"));return s.setAttribute("id","niftErrorText"),s.innerHTML=e,t.appendChild(r),t.appendChild(s),document.body.appendChild(t),console.error(e),!1}class NiftInstance{constructor(e="default"){"default"==e&&(e=document.getElementById("niftBody")),this.parent=e,this.routes=!1,this.niftarea=document.createElementNS("http://www.w3.org/2000/svg","svg"),this.niftarea.setAttribute("data-niftver",NIFT_UI_VERSION),this.niftarea.setAttribute("data-niftsupport",NIFT_UI_SUPPORT_VERSION),this.niftarea.setAttribute("id",NIFT_CANVAS_ID),this.niftarea.setAttribute("x",0),this.niftarea.setAttribute("y",0),this.parent.appendChild(this.niftarea),this.updateOn="mousevent"}initialize=e=>{this.routes=e};renderElement=(e=new NiftComponent)=>{e.BeforRendering();let t=e.innerRender();!1!==t.selfOut&&this.niftarea.appendChild(t.selfOut),!1!==t.selfOutBackdrop&&this.niftarea.appendChild(t.selfOutBackdrop),!1!==t.selfOutChilds&&t.selfOutChilds.map(e=>{this.niftarea.appendChild(e.selfOut),this.niftarea.appendChild(e.selfOutBackdrop)}),e.updateInners(),e.AfterRendering()}}class NiftRoute{constructor(e,t){this.path=e,this.component=t}getPath=()=>this.path;setupAndRender=()=>this.component}class NiftProperty{constructor(e,t,r=!1){this.name=e,this.value=t,this.toRemove=r}}class NiftNode{constructor(){this.parent="default",this.self=!1,this.selfDOM=!1,this.selfOut=!1,this.selfOutBackdrop=!1,this.selfOutChilds=!1}}class NiftComponent extends NiftNode{constructor(e=[],t="default"){super(),"default"==t&&(t=document.getElementById("niftBody")),this.parent=t,this.selfBackdrop=document.createElementNS("http://www.w3.org/2000/svg","polygon"),this.backdropProps=[],this.selfBackdrop.setAttribute("niftType","backfall"),this.self=!1,this.selfOutput=!1,this.selfDOM=!1,this.props=e,this.renderedProps=[],this.childs=[],this.ready=!1,this.error=!1}BeforRendering=()=>{};AfterRendering=()=>{};stylizeBackdrop=()=>{this.selfBackdrop.setAttribute("fill","transparent")};getChilds=domChilderns=>{for(const key in domChilderns)if(Object.hasOwnProperty.call(domChilderns,key)){const child=domChilderns[key];let childComponentName=GetDictionaryName(child.tagName);if(null==childComponentName)return NiftErrorHandler(`Undefined tag ${child.tagName} called.`);let childProps=[];for(const key in child.attributes)if(Object.hasOwnProperty.call(child.attributes,key)){const element=child.attributes[key];childProps.push(new NiftProperty(element.nodeName,element.nodeValue))}this.childs.push(new(eval(childComponentName))(childProps)),this.childs[this.childs.length-1].ready=!0}};setProperty=(e,t)=>{this.props.push(new NiftProperty(e,t)),this.updateInners()};getProperty=t=>{let r=void 0;return this.ready?this.renderedProps.map(e=>{e.name==t&&0==e.toRemove&&(r=e.value)}):this.self.renderedProps.map(e=>{e.name==t&&0==e.toRemove&&(r=e.value)}),r};removeProperty=t=>{let r=-1;this.props.map(e=>{e.name==t&&-1==r&&(e.toRemove=!0,r=0)}),this.updateInners()};iteratePropertyValue=e=>e="%VIEWY%"==e?toString(window.outerHeight):e;mapDOMAttributesToNiftProps=e=>{let t=[];for(const s in e){var r;Object.hasOwnProperty.call(e,s)&&(r=e.attributes[s],t.push(new NiftProperty(r.nodeName,r.nodeValue)))}return t};updateBackdropAreaCapture=e=>{this.selfBackdrop.setAttribute("points",e)};innerRender=()=>{if(!this.ready){this.selfDOM=GetDOMObjectFromString(this.render());let componentName=GetDictionaryName(this.selfDOM.tagName);if(null==componentName)return NiftErrorHandler(`Undefined tag ${this.selfDOM.tagName} called.`);for(const key in this.selfDOM.attributes)if(Object.hasOwnProperty.call(this.selfDOM.attributes,key)){const element=this.selfDOM.attributes[key];this.props.push(new NiftProperty(element.nodeName,element.nodeValue))}this.self=new(eval(componentName))(this.props),this.self.render(),this.getChilds(this.selfDOM.children)}let renderedChilds=this.childs.map(e=>{e.render(),e.BeforRendering(),e.AfterRendering();var t=e.innerRender();return e.updateInners(),t}),returnable=(this.stylizeBackdrop(),new NiftNode);return this.ready?returnable.selfOut=this.selfOutput:returnable.selfOut=this.self.selfOutput,returnable.selfOutBackdrop=this.selfBackdrop,returnable.selfOutChilds=renderedChilds,returnable};updateInners=()=>{this.ready?(this.render(),this.updateBackdropAreaCapture(this.rectArea.pointsString)):(this.self.render(),this.updateBackdropAreaCapture(this.self.rectArea.pointsString))}}class NiftRect{constructor(e=0,t=0,r=0,s=0){this.x=e,this.y=t,this.w=r,this.h=s,this.pointsString="",this.points=[{x:e,y:t},{x:r,y:t},{x:r,y:s},{x:e,y:s}]}buildPolygonPoints=()=>(this.points=[{x:this.x,y:this.y},{x:this.w,y:this.y},{x:this.w,y:this.h},{x:this.x,y:this.h}],this.points);getPointsString=()=>(this.pointsString=this.points.reduce((e,t)=>e+parseInt(t.x)+","+parseInt(t.y)+" ",""),this.pointsString)}class NiftText extends NiftComponent{constructor(e=[]){super(e),this.yet=!1,this.rectArea=new NiftRect,this.textContent="",this.create()}propertyWorker=(t=new NiftProperty)=>{let r=t.name,s=t.value;switch(t.name){case"x":this.rectArea.x=parseInt(t.value),r="points";break;case"y":this.rectArea.y=parseInt(t.value),r="points";break;case"width":this.rectArea.w=parseInt(t.value),r="points";break;case"height":this.rectArea.h=parseInt(t.value),r="points";break;case"content":r="content",this.textContent=t.value}"points"==r?(this.rectArea.buildPolygonPoints(),s=this.rectArea.getPointsString()):"content"==r&&(s=this.textContent);let i=-1,n=0;return this.renderedProps.map(e=>{e.name==r&&(e.value=s,e.toRemove=t.toRemove,i=n),n++}),"points"==r?("x"==t.name||"y"==t.name)&&(-1==i?(this.renderedProps.push(new NiftProperty(t.name,parseInt(t.value),t.toRemove)),this.renderedProps[this.renderedProps.length-1]):this.renderedProps[i]):-1==i?(this.renderedProps.push(new NiftProperty(r,s,t.toRemove)),this.renderedProps[this.renderedProps.length-1]):this.renderedProps[i]};update=()=>{let t=0;this.props.map(e=>{e=this.propertyWorker(e);e&&(e.toRemove?(this.selfOutput.removeAttribute(e.name),this.props.splice(t,1)):this.selfOutput.setAttribute(e.name,e.value),t++)}),this.selfOutput.textContent=this.textContent};create=()=>{this.selfOutput=document.createElementNS("http://www.w3.org/2000/svg","text")};render=()=>{this.yet?this.update():(this.create(),this.update(),this.yet=!0)}}class NiftImage extends NiftComponent{constructor(e=[]){super(e),this.yet=!1,this.rectArea=new NiftRect,this.imgHref="",this.create()}propertyWorker=(t=new NiftProperty)=>{let r=t.name,s=t.value;switch(t.name){case"x":this.rectArea.x=parseInt(t.value),r="points";break;case"y":this.rectArea.y=parseInt(t.value),r="points";break;case"width":this.rectArea.w=parseInt(t.value),r="points";break;case"height":this.rectArea.h=parseInt(t.value),r="points";break;case"content":r="content",this.textContent=t.value}"points"==r&&(this.rectArea.buildPolygonPoints(),s=this.rectArea.getPointsString());let i=-1,n=0;return this.renderedProps.map(e=>{e.name==r&&(e.value=s,e.toRemove=t.toRemove,i=n),n++}),-1==i?(this.renderedProps.push(new NiftProperty(r,s,t.toRemove)),this.renderedProps[this.renderedProps.length-1]):this.renderedProps[i]};update=()=>{let t=0;this.props.map(e=>{e=this.propertyWorker(e);e&&(e.toRemove?(this.selfOutput.removeAttribute(e.name),this.props.splice(t,1)):this.selfOutput.setAttribute(e.name,e.value),t++)})};create=()=>{this.selfOutput=document.createElementNS("http://www.w3.org/2000/svg","image")};render=()=>{this.yet?this.update():(this.create(),this.update(),this.yet=!0)}}class NiftBlock extends NiftComponent{constructor(e=[]){super(e),this.yet=!1,this.rectArea=new NiftRect,this.create()}propertyWorker=(t=new NiftProperty)=>{let r=t.name,s=t.value;switch(t.name){case"x":this.rectArea.x=parseInt(t.value),r="points";break;case"y":this.rectArea.y=parseInt(t.value),r="points";break;case"width":this.rectArea.w=parseInt(t.value),r="points";break;case"height":this.rectArea.h=parseInt(t.value),r="points"}"points"==r&&(this.rectArea.buildPolygonPoints(),s=this.rectArea.getPointsString());let i=-1,n=0;return this.renderedProps.map(e=>{e.name==r&&(e.value=s,e.toRemove=t.toRemove,i=n),n++}),-1==i?(this.renderedProps.push(new NiftProperty(r,s,t.toRemove)),this.renderedProps[this.renderedProps.length-1]):this.renderedProps[i]};update=()=>{let t=0;this.props.map(e=>{e=this.propertyWorker(e);e.toRemove?(this.selfOutput.removeAttribute(e.name),this.props.splice(t,1)):this.selfOutput.setAttribute(e.name,e.value),t++})};create=()=>{this.selfOutput=document.createElementNS("http://www.w3.org/2000/svg","polygon")};render=()=>{this.yet?this.update():(this.create(),this.update(),this.yet=!0)}}export{NiftAsModule,NiftNode,NiftRoute,NiftProperty,NiftComponent,NiftInstance};